services:
  avito-shop-service:
      build:
        context: .
        dockerfile: Dockerfile
      hostname: avito-shop-service
      container_name: avito-shop-service
      ports:
        - "8080:8080"
      environment:
        # енвы подключения к БД
        - DATABASE_PORT=5432
        - DATABASE_USER=postgres
        - DATABASE_PASSWORD=password
        - DATABASE_NAME=shop
        - DATABASE_HOST=db
        # порт сервиса
        - SERVER_PORT=8080
      depends_on:
        db:
            condition: service_healthy
      networks:
        - internal
  
  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shop
    volumes:
      # "./migrations/init.sql" - путь к миграциям БД
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d shop'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal

  test: 
    build: 
      context: .
      dockerfile: Dockerfile.test
    container_name: test
    environment:
        - DATABASE_PORT=5432
        - DATABASE_USER=postgres
        - DATABASE_PASSWORD=password
        - DATABASE_NAME=shop
        - DATABASE_HOST=db
    command: >
      sh -c "go test -v -race -cover ./... -coverprofile=coverage.out && 
      go tool cover -html=coverage.out -o coverage.html; sh /scripts/writer.sh"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/merch-shop
      - ./scripts:/scripts
      - shared-data:/data
    networks:
        - internal

  # линтеры
  linters:
    build: 
      context: .
      dockerfile: Dockerfile.linters
    container_name: linters
    networks:
        - internal


  # нагрузочное тестирование (Grafana k6)
  k6:
    image: grafana/k6
    container_name: k6
    entrypoint: ["sh", "/scripts/reader.sh"]
    volumes:
      - ./load_test.js:/load_test.js  
      - ./scripts:/scripts
      - shared-data:/data
    depends_on:
      - test
    networks:
        - internal 

networks:
  internal:

volumes:
  shared-data: